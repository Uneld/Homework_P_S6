# Задача No45. Решение в группах
# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n (включая 1, но исключая само n)
# равна числу m и наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k.
# Программа получает на вход одно натуральное число k, не превосходящее 105. Программа должна вывести все пары дружественных чисел,
# каждое из которых не превосходит k. Пары необходимо выводить по одной в строке, разделяя пробелами.
# Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).
# Ввод: Вывод:
# 300 220 284


def calcSum(a):
    sum = 0
    out = dict()
    for i in range(1, a // 2 + 1):
        if a % i == 0:
            sum += i

    out[a] = sum
    return out


input = 300
dictValSum = dict()
for i in range(input - 1):
    dictValSum.update(calcSum(i))

for k1, v1 in dictValSum.items():
    for k2, v2 in dictValSum.items():
        if k1 == v2 and k2 == v1 and k1 != k2:
            print(f"k = {k1}, v = {v1}")

# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом массиве),
# которых нет во втором массиве. Пользователь вводит число N - количество элементов в первом массиве,
# затем N чисел - элементы массива. Затем число М - количество элементов во втором массиве. Затем элементы второго массива
# Ввод:
# 7
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1
# вывод
# 3 3 2 12

from random import randint

in1 = int(input("Введите размер 1 массива: "))
list_1 = [randint(1, in1) for i in range(in1)]

in2 = int(input("Введите размер 2 массива: "))
list_2 = [randint(1, in2) for i in range(in2)]

listOutput = [i for i in list_1 if i not in list_2]
print(listOutput)

# Семинар 6. Повторение списков
# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
# Вводится список чисел. Все числа списка находятся на разных строках.
# Ввод: 1 2 3 2 3
# Вывод: 2

list_in = [1, 2, 3, 2, 3, 3, 4, 5, 6, 5, 4, 3]
list_out = list()

for i in range(len(list_in)):
    if list_in[i] in list_in[(i + 1) :] and list_in[i] not in list_out:
        list_out.append(list_in[i])

print(list_out)
print(len(list_out))


list_in = [1, 2, 3, 2, 3, 2, 2, 1]
list_out = list()


def check(listIn, size):
    if size < 2:
        return
    tmpList = listIn[1:]
    if listIn[0] in tmpList:
        list_out.append(listIn[0])
        listIn.pop(tmpList.index(listIn[0]) + 1)
        listIn.pop(0)
    else:
        listIn.pop(0)

    check(listIn, len(listIn))


check(list_in, len(list_in))

print(list_out)
print(len(list_out))

# Задача 30:  Заполните массив элементами арифметической прогрессии. Её первый элемент, разность и количество элементов нужно ввести с
# клавиатуры. Формула для получения n-го члена прогрессии: an = a1 + (n-1) * d.
# Каждое число вводится с новой строки.
# Ввод: 7 2 5
# Вывод: 7 9 11 13 15

print("an = a1 + (n-1) * d")
a1 = int(input("Введите первый элемент: "))
n = int(input("Введите разность: "))
d = int(input("Введите количество элементов: "))

listOut = [a1 + n * i for i in range(d)]
print(listOut)

# Задача 32: Определить индексы элементов массива (списка), значения которых принадлежат заданному диапазону
# (т.е. не меньше заданного минимума и не больше заданного максимума)

from random import randint

# listIn = [-5, 9, 0, 3, -1, -2, 1, 4, -2, 10, 2, 0, -9, 8, 10, -9, 0, -5, -5, 7]

n = int(input("Введите размер массива: "))
listIn = [randint(1, n) for i in range(n)]

min = int(input("Введите min: "))
max = int(input("Введите max: "))
listOut = list()

for i in range(len(listIn)):
    if max >= listIn[i] and min <= listIn[i]:
        listOut.append(i)

print(listOut)
